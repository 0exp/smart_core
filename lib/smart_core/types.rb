# frozen_string_literal: true

# @api public
# @since 0.9.0
module SmartCore::Types
  # 1. проверять, что является таким-то инстансом
  # 2. проверять, что является таким-то типом
  # 3. проверять, что интерфейс совпадает и заимплемечен (респонд_ту проверочка)
  # 4. уметь проверять хэши
  # 5. уметь проверять массивы
  # 6. уметь проверять что хэш имеет такую-то схему
  # 7. уметь проверять что массив содержит только такие элементы или один из
  # 8. уметь проверять отдельные типы на условя (больше-меньше-равно)
  # 9. уметь проверять на опшионал (это когда значение либо нил либо тип) - можно имплементировать как Strict от суммы типов NilClass и String для примера
  # 10. имплементировать сумму типов (возможность суммировать типы)
  # 11. имплементировать Coercible-типы, которые не чекают, а приводят К типу
  # 12. предоставить инетрфейс для реализации своего типа
  # 13. у каждой проверялки можно вызвать метод-чекер (valid?() - чтобы вернуть булеан ИЛИ check() - чтобы упасть с эксепшном если что-то не так)
  # 14. каждый тип может быть енумом (тип со значением одного из)
  # 15. можно сделать простой енум-тип (это значит значение, которое просто одно из)
end
